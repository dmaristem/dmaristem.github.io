<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>dmaristem</title>
    <link href="https://dmaristem.github.io/feed.xml" rel="self" />
    <link href="https://dmaristem.github.io" />
    <updated>2020-03-16T12:34:23-04:00</updated>
    <author>
        <name>Maria Duong</name>
    </author>
    <id>https://dmaristem.github.io</id>

    <entry>
        <title>Translators without Borders : Covid-19 language mapping research (WIP)</title>
        <author>
            <name>Maria Duong</name>
        </author>
        <link href="https://dmaristem.github.io/translators-without-borders-covid-19-language-mapping-research-wip.html"/>
        <id>https://dmaristem.github.io/translators-without-borders-covid-19-language-mapping-research-wip.html</id>

        <updated>2020-03-16T12:33:43-04:00</updated>
            <summary>
                <![CDATA[
                    (Work-In-Progress) We will pick 8 out of 16 countries to curate spatial&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>(Work-In-Progress)<br><br>We will pick 8 out of 16 countries to curate spatial language and literacy data from census and other existing sources. They are countries affected by the COVID-19 outbreak.</p>
<p>Options (given by TWB):</p>
<p>Bangladesh, Cambodia, Hong Kong, India, Indonesia, Japan, Laos, Malaysia, Myanmar, Nepal, Philippines, Singapore, South Korea, Taiwan, Thailand, Vietnam.</p>
<p>Covid-19 cases data sources, as of March 16, 2020, 11am EDT:</p>
<p> From WHO: <a href="https://experience.arcgis.com/experience/685d0ace521648f8a5beeeee1b9125cd">https://experience.arcgis.com/experience/685d0ace521648f8a5beeeee1b9125cd</a></p>
<p>From the Hong Kong government: <a href="https://www.chp.gov.hk/files/pdf/statistics_of_the_cases_novel_coronavirus_infection_en.pdf">https://www.chp.gov.hk/files/pdf/statistics_of_the_cases_novel_coronavirus_infection_en.pdf</a> </p>
<ol>
<li>Republic of Korea: 8162</li>
<li>Japan: 780</li>
<li>Malaysia: 238</li>
<li>Singapore: 226</li>
<li>Hong Kong: 156 * (from Hong Kong government website)</li>
<li>Philippines: 140</li>
<li>Indonesia: 117</li>
<li>Thailand: 114</li>
<li>India: 107</li>
<li>Taiwan: 59 * (from Hong Kong government website)</li>
<li>Vietnam: 53</li>
<li>Cambodia: 7</li>
<li>Bangladesh: 3</li>
<li>Nepal: 1</li>
<li>Myanmar, Laos: 0</li>
</ol>
<p>If we’re not pre-emptively mapping, then Myanmar and Laos will not be in our 8 chosen countries. When choosing these countries, data availability must be taken into account, but also the direness of the outbreak (measured by confirmed cases), and the variety of languages that exist within the affected regions – where is there the most need for this language mapping?</p>
<p>I’m surprised Iran is not in our options list, seeing as they are highly affected, and speak a non-Western language. Perhaps the options list will change with new numbers coming in. <br><br></p>
<p>Table 1: Relevant available data sources by country</p>
<table>
<tbody>
<tr>
<td width="102">
<p>Country</p>
</td>
<td width="189">
<p>Data Sources</p>
</td>
<td width="151">
<p>Attributes of Interest</p>
</td>
<td width="85">
<p>Notes</p>
</td>
</tr>
<tr>
<td width="102">
<p>South Korea</p>
</td>
<td width="189">
<p> </p>
</td>
<td width="151">
<p> </p>
</td>
<td width="85">
<p> </p>
</td>
</tr>
<tr>
<td width="102">
<p>Japan</p>
</td>
<td width="189">
<p> </p>
</td>
<td width="151">
<p> </p>
</td>
<td width="85">
<p> </p>
</td>
</tr>
<tr>
<td width="102">
<p>Singapore</p>
</td>
<td width="189">
<p>Census Population 2010 (t1-3.xls)</p>
<p> </p>
<p>General Household Survey 2015 (t1-9xls) – Tables: Resident Population by Single Year of Age, Ethnic Group and Sex; Chinese Resident Population by Age Group, Dialect Group and Sex; Malay Resident Population by Age Group, Dialect Group and Sex; Indian Resident Population by Age Group, Dialect Group and Sex; Resident Population of Other Ethnic Groups by Age Group, Ethnic Group and Sex; Resident Population by Planning Area/Subzone by Age Group and Sex</p>
<p> </p>
<p>Population and Population Structure, 2019: <a href="https://www.singstat.gov.sg/find-data/search-by-theme/population/population-and-population-structure/latest-data">https://www.singstat.gov.sg/find-data/search-by-theme/population/population-and-population-structure/latest-data</a></p>
<p> </p>
</td>
<td width="151">
<p>Planning Area/Subzone (Resident population by planning area/subzone, ethnic group, and sex)</p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p>Ethnic Group, Dialect Group, Subzone</p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p>Total Population</p>
</td>
<td width="85">
<p>Missing Dialect Group for each subzone; Dialect group of ‘others’</p>
<p> </p>
</td>
</tr>
<tr>
<td width="102">
<p>Malaysia</p>
</td>
<td width="189">
<p>Census 2010</p>
</td>
<td width="151">
<p> </p>
</td>
<td width="85">
<p> </p>
</td>
</tr>
<tr>
<td width="102">
<p>Hong Kong</p>
</td>
<td width="189">
<p>Use of Language in Hong Kong in 2018</p>
<p>censtatd.gov.hk/hkstat/sub/sp140.jsp?productCode=FA100270</p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p>Population and Household Statistics Analysed by District Council District (18): <a href="https://www.censtatd.gov.hk/hkstat/sub/sp150.jsp?productCode=B1130301">https://www.censtatd.gov.hk/hkstat/sub/sp150.jsp?productCode=B1130301</a></p>
<p> </p>
</td>
<td width="151">
<p>Perceived Language Competence in using _____</p>
<p> </p>
<p> </p>
</td>
<td width="85">
<p> </p>
</td>
</tr>
<tr>
<td width="102">
<p>India</p>
</td>
<td width="189">
<p><a href="http://censusindia.gov.in/2011Census/C-16_25062018_NEW.pdf">http://censusindia.gov.in/2011Census/C-16_25062018_NEW.pdf</a></p>
<p> </p>
</td>
<td width="151">
<p> </p>
</td>
<td width="85">
<p>‘Mother tongue’ reporter, but not the language of fluency.</p>
</td>
</tr>
<tr>
<td width="102">
<p>Thailand</p>
</td>
<td width="189">
<p> </p>
</td>
<td width="151">
<p> </p>
</td>
<td width="85">
<p> </p>
</td>
</tr>
<tr>
<td width="102">
<p>Taiwan</p>
</td>
<td width="189">
<p><a href="https://eng.stat.gov.tw/lp.asp?ctNode=1628&amp;CtUnit=778&amp;BaseDSD=7&amp;mp=5">https://eng.stat.gov.tw/lp.asp?ctNode=1628&amp;CtUnit=778&amp;BaseDSD=7&amp;mp=5</a></p>
<p> </p>
</td>
<td width="151">
<p> </p>
</td>
<td width="85">
<p> </p>
</td>
</tr>
<tr>
<td width="102">
<p>Vietnam</p>
</td>
<td width="189">
<p> </p>
</td>
<td width="151">
<p> </p>
</td>
<td width="85">
<p> </p>
</td>
</tr>
</tbody>
</table>
<p><br> </p>
<p>Table 2: Known languages within each country</p>
<table>
<tbody>
<tr>
<td width="208">
<p>Country</p>
</td>
<td width="208">
<p>OLAC catalog of languages spoken in this country (ISO 639-3 code)</p>
<p> </p>
</td>
<td width="208">
<p>Languages mentioned in Census</p>
</td>
</tr>
<tr>
<td width="208">
<p>South Korea</p>
</td>
<td width="208">
<p> </p>
</td>
<td width="208">
<p> </p>
</td>
</tr>
<tr>
<td width="208">
<p>Japan</p>
</td>
<td width="208">
<p> </p>
</td>
<td width="208">
<p> </p>
</td>
</tr>
<tr>
<td width="208">
<p>Singapore</p>
</td>
<td width="208">
<p>-          Baba Malay (mbf)</p>
<p>-          Bengali (ben)</p>
<p>-          English (eng)</p>
<p>-          Gujarati (guj)</p>
<p>-          Hakka Chinese (hak)</p>
<p>-          Hindi (hin)</p>
<p>-          Javanese (jav)</p>
<p>-          Madurese (mad)</p>
<p>-          Malay (zlm)</p>
<p>-          Malayalam (mal)</p>
<p>-          Mandarin Chinese (cmn)</p>
<p>-          Min Bei Chinese (mnp)</p>
<p>-          Min Dong Chinese (cdo)</p>
<p>-          Min Nan Chinese (nan)</p>
<p>-          Orang Seletar (ors)</p>
<p>-          Panjabi (pan)</p>
<p>-          Pu-Xian Chinese (cpx)</p>
<p>-          Sindhi (snd)</p>
<p>-          Yue Chinese (yue)</p>
<p>-          Telugu (tel)</p>
<p>-          Tamil (tam)</p>
<p>-          Standard Malay (zsm)</p>
<p>-          Sinhala (sin)</p>
<p>-          Singapore Sign Language (sls)</p>
<p> </p>
<p>language-archives.org/country/SG</p>
<p> </p>
<p>blue highlight – exact name match</p>
</td>
<td width="208">
<p>Ethnic Group: Dialect Groups</p>
<p> </p>
<p>Chinese:</p>
<p>-          Hokkien</p>
<p>-          Teochew</p>
<p>-          Cantonese</p>
<p>-          Hakka</p>
<p>-          Hainanese</p>
<p>-          Foochow</p>
<p>-          Henghua</p>
<p>-          Shanghainese (Wu?)</p>
<p>-          Hokchia</p>
<p>-          Other Chinese</p>
<p> </p>
<p>Malay:</p>
<p>-          Malay</p>
<p>-          Javanese</p>
<p>-          Boyanese</p>
<p>-          Other Malays</p>
<p> </p>
<p>India</p>
<p>-          Tamil</p>
<p>-          Malayalee</p>
<p>-          Hindi</p>
<p>-          Sikh</p>
<p>-          Punjabi</p>
<p>-          Urdu</p>
<p>-          Hindustani</p>
<p>-          Gujarati</p>
<p>-          Sindhi</p>
<p>-          Sinhalese</p>
<p>-          Other Indians</p>
<p> </p>
<p>Other Ethnic groups:</p>
<p>-          Filipino</p>
<p>-          Caucasian</p>
<p>-          Eurasian</p>
<p>-          Arab</p>
<p>-          Thai</p>
<p>-          Japanese</p>
<p>-          Others</p>
<p> </p>
</td>
</tr>
<tr>
<td width="208">
<p>Malaysia</p>
</td>
<td width="208">
<p> </p>
</td>
<td width="208">
<p> </p>
</td>
</tr>
<tr>
<td width="208">
<p>Hong Kong</p>
</td>
<td width="208">
<p> </p>
</td>
<td width="208">
<p> </p>
</td>
</tr>
<tr>
<td width="208">
<p>India</p>
</td>
<td width="208">
<p> </p>
</td>
<td width="208">
<p> </p>
</td>
</tr>
<tr>
<td width="208">
<p>Thailand</p>
</td>
<td width="208">
<p> </p>
</td>
<td width="208">
<p> </p>
</td>
</tr>
<tr>
<td width="208">
<p>Vietnam</p>
</td>
<td width="208">
<p> </p>
</td>
<td width="208">
<p> </p>
</td>
</tr>
</tbody>
</table>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Pure CSS: Bicyclist Animation</title>
        <author>
            <name>Maria Duong</name>
        </author>
        <link href="https://dmaristem.github.io/pure-css-bicyclist-animation.html"/>
        <id>https://dmaristem.github.io/pure-css-bicyclist-animation.html</id>

        <updated>2019-11-19T01:28:27-05:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://dmaristem.github.io/media/posts/2/css_cyclist.PNG" alt="" />
                     See Codepen My first pure CSS animation! A loose HTML and CSS&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://dmaristem.github.io/media/posts/2/css_cyclist.PNG" alt="" />
                <p class="align-center"> See <a href="https://codepen.io/dmaristem/full/RLeXXK/" target="_blank" rel="noopener noreferrer">Codepen</a></p>
<p>My first pure CSS animation! A loose HTML and CSS translation of Dribble shot <a href="https://dribbble.com/shots/2572469-Cycling" target="_blank" rel="noopener noreferrer">"Cycling" by Moncho Massé</a>. I say 'loose' because it wasn't my original intention to do a graphic art to HTML/CSS translation - just wanted to use the warm, gorgeous color palette. Eventually decided to use the original work as replication practice. Based the wheels off of this flat illustration, gotten somewhere off Google Images :</p>
<p><img class="align-center" src="https://odetostem.files.wordpress.com/2017/10/white-bike.jpg?w=511" alt="white bike"></p>
<h2 id="mcetoc_1dq12rgl50">Process:</h2>
<ol>
<li>Bike</li>
<li>Bike Animation</li>
<li>Girl</li>
<li>Girl Animation</li>
</ol>
<h3 id="mcetoc_1dq12rgl51">1. Bike</h3>
<p>I started off with the bike, so that that the girl could later sit on something visible. The stationary but spinning wheels were also a great deal less intimidating to start off with than the moving legs.</p>
<p><em>a) Wheel<br></em>The wheel was easy to make -- a circle with <strong>background: none </strong>, with a border that acted as the tire, and <strong>box-shadow: inset </strong>as the inner lining of the tire.</p>
<p>CSS Syntax</p>
<pre>box-shadow:  h-shadow    v-shadow    blur    spread-color</pre>
<p>Things to note about box-shadow:</p>
<ul>
<li>when all values are 0px, the shadow cannot be seen because it is directly behind its element</li>
<li>if the element has a border, the box-shadow is contained within this space, regardless of h-shadow or v-shadow values</li>
</ul>
<h3 id="mcetoc_1dq12rgl52">NEW: Sass</h3>
<p>So I learned the basics of Sass with Dan Cederholm's "Sass for Web Designers," and implemented what I learned for the first time in this project. Seeing that two wheels are needed, I created a mixin for the properties that both wheel elements  would share.</p>
<p><img class="alignnone size-full wp-image-5779" src="https://odetostem.files.wordpress.com/2017/10/cycling_mixin_wheel.png" alt="cycling_mixin_wheel" width="482" height="269"></p>
<p>That left the class selectors 'back-wheel' and 'front-wheel', whose only difference was the value of the left position property.</p>
<p><img class="alignnone size-full wp-image-5782" src="https://odetostem.files.wordpress.com/2017/10/mixin-back-front-wheels.png" alt="mixin-back-front-wheels" width="212" height="246"></p>
<p>At the time I was just excited to use my newly acquired knowledge of Sass. Looking back at this, I would not have used @mixin.</p>
<p>The above SCSS code would have compiled to the following in CSS:</p>
<pre>.wheel {
  position: absolute; 
  border-radius:50%; 
  width: 200px; 
  height: 200px; 
  background:black; 
  border: 12px solid $wheel;
  box-shadow: inset 20px 500px 0px 10px $wheel-lining;
  top: 360px; 
  z-index: 2;
}

.back-wheel {
  position: absolute; 
  border-radius:50%; 
  width: 200px; 
  height: 200px; 
  background:black; 
  border: 12px solid $wheel;
  box-shadow: inset 20px 500px 0px 10px $wheel-lining;
  top: 360px; 
  z-index: 2;
 <strong> left: 20px;</strong> 
}

.front-wheel {
  position: absolute; 
  border-radius:50%; 
  width: 200px; 
  height: 200px; 
  background:black; 
  border: 12px solid $wheel;
  box-shadow: inset 20px 500px 0px 10px $wheel-lining;
  top: 360px; 
  z-index: 2;
  <strong>left: 440px;</strong> 
}</pre>
<p>This generated CSS is not following the <strong>DRY principle.</strong> If mixins are used, the styles in them are duplicated all over the classes.</p>
<p>Alternative methods:<br>1) I could have used another class named 'wheel' in place of the mixin:</p>
<p>HTML</p>
<div class="wheel back-wheel"><img class="alignnone size-full wp-image-5927" src="https://odetostem.files.wordpress.com/2017/10/cycling-html-test.png" alt="cycling-html-test" width="688" height="79"></div>
<div class="wheel front-wheel"> </div>
<p>SCSS</p>
<pre>.wheel {
  position: absolute; 
  border-radius:50%; 
  width: 200px; 
  height: 200px; 
  background:black; 
  border: 12px solid $wheel;
  box-shadow: inset 20px 500px 0px 10px $wheel-lining;
  top: 360px; 
  z-index: 2;
}

.back-wheel {
  left: 20px; 
}

.front-wheel {
  left: 440px; 
}</pre>
<p>2) I could have also used the <strong>@extend directive</strong> to share CSS properties between these selectors:</p>
<p>HTML</p>
<div class="wheel back-wheel"><img class="alignnone size-full wp-image-5927" src="https://odetostem.files.wordpress.com/2017/10/cycling-html-test.png" alt="cycling-html-test" width="688" height="79"></div>
<div class="wheel front-wheel"> </div>
<div class="wheel front-wheel"> </div>
<p>SCSS</p>
<pre>.wheel {
  position: absolute; 
  border-radius:50%; 
  width: 200px; 
  height: 200px; 
  background:black; 
  border: 12px solid $wheel;
  box-shadow: inset 20px 500px 0px 10px $wheel-lining;
  top: 360px; 
  z-index: 2;
}

.back-wheel {
 <strong> @extend .wheel; </strong>
  left: 20px; 
}

.front-wheel {|
<strong>  @extend .wheel; </strong>
  left: 440px; 
}</pre>
<p>Which compiles to the following in CSS:</p>
<pre><strong>.wheel, .back-wheel, .front-wheel</strong> {
  position: absolute; 
  border-radius:50%; 
  width: 200px; 
  height: 200px; 
  background:black; 
  border: 12px solid $wheel;
  box-shadow: inset 20px 500px 0px 10px $wheel-lining;
  top: 360px; 
  z-index: 2;
}

.back-wheel {
  left: 20px; 
}

.front-wheel {
  left: 440px; 
}</pre>
<p>Which brings us to the question -- is alternative method #1 or #2 better in this scenario?</p>
<p>Oh wait, newly in: 3) Using Sass <strong>placeholder selectors </strong>with the @extend directive:</p>
<pre><strong>%wheel </strong>{
  position: absolute; 
  border-radius:50%; 
  width: 200px; 
  height: 200px; 
  background:black; 
  border: 12px solid $wheel;
  box-shadow: inset 20px 500px 0px 10px $wheel-lining;
  top: 360px; 
  z-index: 2;
}

.back-wheel {
<strong>  @extend %wheel;</strong> 
  left: 20px; 
}

.front-wheel {
  <strong>@extend %wheel;</strong>
  left: 440px; 
}</pre>
<p>Which compiles to the following in CSS:</p>
<pre><strong>.back-wheel, .front-wheel </strong>{
  position: absolute; 
  border-radius:50%; 
  width: 200px; 
  height: 200px; 
  background:black; 
  border: 12px solid $wheel;
  box-shadow: inset 20px 500px 0px 10px $wheel-lining;
  top: 360px; 
  z-index: 2;
}

.back-wheel {
  left: 20px; 
}

.front-wheel {
  left: 440px; 
}</pre>
<ul>
<li>Placeholder selectors do not show up in the generated CSS!</li>
<li><a href="https://codepen.io/dmaristem/pen/EwdRGN" target="_blank" rel="noopener noreferrer">The placeholder selector does not have to be an existing class within HTML. </a></li>
</ul>
<p>The HTML for the above code is just this:</p>
<p><img class="alignnone size-full wp-image-5930" src="https://odetostem.files.wordpress.com/2017/10/cycling-html-test2.png" alt="cycling-html-test2" width="589" height="76"></p>
<p>Therefore, when looking at the generated CSS, alternative method #3) using Sass placeholder selector with @extend directive:</p>
<ol>
<li>Simplifies CSS selectors</li>
<li>Keep properties DRY</li>
<li>Reduce the class attributes used in HTML</li>
</ol>
<p>Which seems like the best method for better maintainability of the code.</p>
<p>With regards to better overall performance of CSS (and thus the web page?) --- that, I am unsure of. Intuitively I'd yes, there could be a positive effect on performance, but I'm not knowledgeable enough yet to say how and why that would be so. {CHECK} </p>
<p><strong><em>b) Spokes </em></strong></p>
<p>Modeled the spokes orientation after the numbers on a clock-face. So the class named '_12-6' is the vertical spoke right in the center of the wheel. Needed 6 spokes in total.</p>
<p>As for spacing between spokes:  360 degrees (of a circle) divided by 12 (hours on a clock) equals 30 degrees (between each hour on the clock-face).</p>
<p>Used the @include directive to reference @mixin rotate($deg). I almost reached the same mixin, but was missing the # symbol and {} braces. The generic transform mixin I found online.</p>
<p><img class="alignnone size-full wp-image-5892" src="https://odetostem.files.wordpress.com/2017/10/cycling_spokes.png" alt="cycling_spokes" width="247" height="623"><img class="alignnone size-full wp-image-5893" src="https://odetostem.files.wordpress.com/2017/10/cycling_mixin_rotate.png" alt="cycling_mixin_rotate" width="381" height="266"></p>
<p>The property <strong>background: none </strong>gave the illusion of seeing through the spokes of the wheel to the background.</p>
<p><strong><em>c) Bike body frame, handlebar, seat, hub, chains, crankset, crank</em></strong></p>
<p>Just rotating and positioning into place.</p>
<h3 id="mcetoc_1dq12rgl53">2. Bike Animation</h3>
<p><em><strong>a) Cassette &amp; Spokes</strong></em></p>
<p>I made the cassette (cluster of sprockets on the rear hub) the parent div of all the spokes divs. This way, all I need to rotate is the cassette itself, to give the impression of spinning wheels.</p>
<p>The <strong>transform-origin</strong> of the cassette is the default 50% 50%, smack-dab in its center, where the spokes' convergence point is fixed.</p>
<p>Used a mixin for the @keyframes rule (found online) to specify the animation code.</p>
<p><img class="alignnone size-full wp-image-5948" src="https://odetostem.files.wordpress.com/2017/10/cycling_generic_animation.png" alt="cycling_generic_animation" width="414" height="579"></p>
<p>{CHECK} Why the # symbol before the animation-name and str?</p>
<p><img class="alignnone size-full wp-image-5953" src="https://odetostem.files.wordpress.com/2017/10/cycling_cassette_rotation.png" alt="cycling_cassette_rotation" width="448" height="200"></p>
<p><strong>NOTE:</strong> Used the value 359 and not 360 because degrees in rotate() can only take values in this range: [0, 360).</p>
<p>To go clockwise (because the bicycle is supposed to be moving from left to right), a negative value (-359 degrees) was used as the starting property value.</p>
<p>Animation shorthand - CSS Syntax:</p>
<pre>animation: <i>name duration timing-function delay iteration-count direction fill-mode play-state</i>;</pre>
<p><img class="alignnone size-full wp-image-5970" src="https://odetostem.files.wordpress.com/2017/10/cycling_cassette.png" alt="cycling_cassette" width="469" height="290"></p>
<p>In order, here I used:</p>
<ul>
<li>rotation --&gt; animation-name (specifies the name of the keyframe to bind to the selector)</li>
<li>1s --&gt; animation-duration (specifies how many seconds an animation takes to complete)</li>
<li>infinite --&gt; animation-iteration-count (specifies how many times an animation should be played)</li>
<li>linear --&gt; animation-timing-function (specifies the speed curve of the animation); linear specifies an animation with the same speed from start to end</li>
</ul>
<p>So the order in the given syntax doesn't matter, unless when using both duration and delay.</p>
<p><em><strong>b) Crank </strong></em></p>
<p>Had some trouble with transform-origin initially. For some reason, the crank was rotating somewhere way above the crankset. Re-positioned and set transform-origin to 'bottom center'. Could have done 'bottom left', and the result would be the same.</p>
<p>In the beginning, I made the pedal a child div of crank, and had it rotating with the crank. But the pedal was supposed to be fixed in its original position while rotating. In later iterations, the pedal became a child div of shoe, which allowed it to keep its original orientation while rotating. Yes, a hack, I know.</p>
<h3 id="mcetoc_1dq12rgl54">3. Girl</h3>
<p><em>Pelvic region<br></em>Started off with the pelvic region, so that there was something digitally-tangible sitting on top of the bike seat.</p>
<p><em>Face </em><br>Would like to point out that the eyes have <strong>background: none</strong>, but<strong> box-shadow: inset </strong>so the curved eye effect exists. Without <strong>inset</strong>, the curve would be flipped to the bottom of the no-background element.</p>
<p><em>Torso</em><br>Made the right arm div a child element of the chest div. Wanted to make the left arm a child element of chest div as well, but it needed to be behind the chest. A child element would always appear above the parent element, so I had to make a separate div for the left arm, give it a lower z-index than the chest div, and position it appropriately.</p>
<p>In retrospect, should have made the belly div a child element of chest as well. Same goes for neck (either a child element of chest or head).</p>
<p>Making child elements like this will make it easier to animate -- just animate the parent div to animate the children divs too.</p>
<p><em>Legs<br></em>Similarly, the calves became child elements of the thighs.</p>
<h3 id="mcetoc_1dq12rgl55">4. Girl Animation</h3>
<p>The most time-consuming task of all.</p>
<p>After eyeballing the original animation for a very long time, motion could be broken down into:</p>
<p><strong><em>a) Thighs</em></strong></p>
<p>Rotating about ~40-60 degrees continuously, at alternating times to each other. The fixed point of rotation (transform-origin) is on the 'pelvic region' div. The keyframes values were eventually settled through a lot of trial-and-error.</p>
<p><strong><em>b) Calves </em></strong></p>
<p><a href="https://codepen.io/dmaristem/pen/Qqrdpr" target="_blank" rel="noopener noreferrer">In the beginning</a>, the calves were not moving on their own, just using motion from the thighs.</p>
<p>After a lot of <a href="https://codepen.io/dmaristem/pen/xXJxgm" target="_blank" rel="noopener noreferrer">testing</a>, the movement for the right calf was deconstructed to four parts: starting at the 'rest' position, followed by a decrease in degrees (to rotate counter-clockwise; to kick out), the 'rest' position again, and  an increase in degrees (to rotate clockwise; to kick back).</p>
<p>Again, plenty of trial-and-error and fiddling around with the degree values.</p>
<p>Still haven't gotten a perfect circular movement.</p>
<p><strong><em>c) Pelvic region, torso, neck, head</em></strong></p>
<p><strong>Issue: </strong>Multiple transforms i.e. left arm, neck, belly, were all rotated prior to translation. Applying translation after the rotation made these elements revert back to their original orientation before rotation.</p>
<p>For example, I could not do this:</p>
<pre>.l-arm {
  @include rotate(20); 
  @include transform(2, 3); 
}</pre>
<p>When there are multiple transform directives, only the last one will be applied.</p>
<p>Without mixins, multiple transforms could be separated with commas i.e.</p>
<pre>.l-arm {
transform: translate(1, 2), rotate(50deg); 
}</pre>
<p>Couldn't find an already existing mixin for multiple transforms that worked (and couldn't develop one that worked) YET; for the sake of saving time, resorted to this:</p>
<p><img class="alignnone size-full wp-image-6071" src="https://odetostem.files.wordpress.com/2017/10/cycling-move-neck.png" alt="cycling-move-neck" width="544" height="444"></p>
<p>An eyesore, but functional.</p>
<p><strong><em>d) Hair, ground streaks, wind </em></strong></p>
<p>Used transform: translation. Need to make smoother. Use transitions?</p>
<h2 id="mcetoc_1dq12rgl56"> </h2>
<h2 id="mcetoc_1dq12rgl57">New things learned</h2>
<ul>
<li>On my search for dealing with multiple transforms and animations, I discovered that behind all transforms are browser-translated matrices! Yay linear algebra! Need to read further.</li>
<li>Used Sass (SCSS syntax) for the first time --- variables, mixins, @include directive, @extend directive, placeholder selectors. Really basic. Continue learning more about Sass.</li>
<li>CSS3 animations</li>
</ul>
<p> </p>
<h2 id="mcetoc_1dq12rgl58">To be improved</h2>
<ul>
<li>Circular motion of calves - still not a perfect 360 degree rotation</li>
<li>Make the crank in full - connect the crank to the pedal for both feet</li>
<li>Position the calf on the knee so that when animating, no bumps are seen on the knees</li>
<li>Smoother animation for wind movement - transitions?</li>
<li>Create and/or find multiple transforms and multiple animations mixins</li>
<li>Closer look at keyframes timelines</li>
<li>Keep track of z-indices</li>
</ul>
<p> </p>
            ]]>
        </content>
    </entry>
</feed>
